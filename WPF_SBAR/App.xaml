<Application x:Class="WPF_SBAR.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPF_SBAR"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             StartupUri="MainWindow.xaml">
	
	
    <Application.Resources>

		

		<Style TargetType="TreeViewItem" >
			<Setter Property="HeaderTemplate">
				<Setter.Value>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<!--<Image Width="20" Source="/Images/diskdrive.png" />-->
							<Image Width="20" Source="{Binding RelativeSource={RelativeSource
								Mode=FindAncestor,AncestorType=TreeViewItem},
								Path=Header, Converter={x:Static local:HeaderConverter.Instance} }" />
							<TextBlock Text="{Binding}" ></TextBlock>
						</StackPanel>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="LabelStyle" TargetType="Label">
			
			<Style.Setters>
				
				<Setter Property="Foreground" Value="White" ></Setter>
				<Setter Property="FontSize" Value="14" ></Setter>
				<Setter Property="Height" Value="35" ></Setter>
				<Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
				<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
				

			</Style.Setters>
			<Style.Triggers>
				<EventTrigger RoutedEvent="MouseEnter" >
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation 
                                        Storyboard.TargetProperty="(Label.Background).(SolidColorBrush.Color)"
                                        To="#FF686868"
                                        Duration="00:00:0.2"
                                        />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="MouseLeave" >
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation 
                                        Storyboard.TargetProperty="(Label.Background).(SolidColorBrush.Color)"
                                        To="#FF464646"
                                        Duration="00:00:0.2"
                                        />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
			
		</Style>

		<Storyboard x:Key="MouseEnterStoryboard">
            <ColorAnimation 
                                Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)"
                                From="#FF464646"        
                                To="#FF686868"
                                Duration="00:00:0.2"
                            />
        </Storyboard>
        <Storyboard x:Key="MouseLeaveStoryboard">
            <ColorAnimation 
                                        Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)"
                                        From="#FF686868"
                                        To="#FF464646"
                                        Duration="00:00:0.2"
                                    />
        </Storyboard>
        <Style x:Key="TextBlockHover" TargetType="TextBlock" >
            
            <Style.Setters>
                <Setter Property="Background" Value="#FF464646" ></Setter>
				<Setter Property="Foreground" Value="WhiteSmoke" ></Setter>
                <Setter Property="Padding" Value="2" ></Setter>
            </Style.Setters>
            
            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="true" >
                    <Setter Property="Cursor" Value="Hand" ></Setter>
                </Trigger>

                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource MouseEnterStoryboard}" ></BeginStoryboard>
                </EventTrigger>
                
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource MouseLeaveStoryboard}" ></BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SideAnimatedExpander" TargetType="Expander" >

            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate x:Name="MyExpander" TargetType="Expander">

                        <ControlTemplate.Resources>
                            <ResourceDictionary>
                                <Storyboard x:Key="ShowExpanderContent">

                                    <DoubleAnimation 
                                        Storyboard.TargetName="ExContent"
                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"
                                        Duration="0:0:0.15"
                                        From="0"
                                        To="1"
                                    />
                                    <DoubleAnimation 
                                        Storyboard.TargetName="ExContent"
                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)"
                                        Duration="0:0:0.15"
                                        From="0"
                                        To="1"
                                    />

                                </Storyboard>
                                <Storyboard x:Key="HideExpandedContent">
                                    <DoubleAnimation 
                                        Storyboard.TargetName="ExContent"
                                        Duration="0:0:0.15"
                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"
                                        From="1"
                                        To="0"
                                    />

                                    <DoubleAnimation 
                                        Storyboard.TargetName="ExContent"
                                        Duration="0:0:0.15"
                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)"
                                        From="1"
                                        To="0"
                                    />

                                    

                                </Storyboard>
                            </ResourceDictionary>
                        </ControlTemplate.Resources>

                        <DockPanel>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="Collapsed" Storyboard="{StaticResource HideExpandedContent}" />
                                    <VisualState x:Name="Expanded" Storyboard="{StaticResource ShowExpanderContent}" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ToggleButton x:Name="ExName" DockPanel.Dock="Top" HorizontalAlignment="Left" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding Header}">

                                <ToggleButton.Template>
                                    <ControlTemplate x:Name="templateToggle" TargetType="ToggleButton">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="30" ></ColumnDefinition>
                                                <ColumnDefinition Width="30*" ></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Ellipse Margin="2" Width="20"  Height="20" Fill="#FFE4E4E4"></Ellipse>
                                            <svgc:SvgViewbox Margin="6,8" Height="10" Source="images/angle-double-right.svg" RenderTransformOrigin="0.5,0.5" >
                                                <svgc:SvgViewbox.RenderTransform>
                                                    <TransformGroup>
                                                        <RotateTransform x:Name="ExpanderLogoAngle" Angle="90"/>
                                                    </TransformGroup>
                                                </svgc:SvgViewbox.RenderTransform>
                                            </svgc:SvgViewbox>
                                            <ContentPresenter Grid.Column="1"  VerticalAlignment="Center">

                                            </ContentPresenter>
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                
                            </ToggleButton>

                            <ContentPresenter x:Name="ExContent" Height="Auto" Margin="5,0,0,0">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="0" ScaleX="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>

                        </DockPanel>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFC7BBBB"/>
        </Style>

    </Application.Resources>
</Application>
